<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hf.op.domain.model.dict.GoodsOrderRepository">

  <select id="indexData" resultType="com.hf.op.infrastructure.vo.GoodsOrderPageVo">
    SELECT count(1) price, 'goodsNum' size from goods_base
    union all
    SELECT sum(inventory) price, 'inventoryNum' size from goods_inventory
    union all
    SELECT sum(old_inventory) price, 'goodsPutInNum' size from goods_inventory
    union all
    SELECT sum(inventory * price )  price,'inventoryCost'  size from goods_inventory
    union all
    SELECT sum(inventory * dw_price )  price,'marketValue'  size from goods_inventory
    union all
    SELECT sum(price) price,'otherRevenue'  size from goods_other where data_status = 1
  </select>

  <select id="indexOrderData1" resultType="com.hf.op.infrastructure.dto.department.GoodsOrderLineVo">
    -- 上月
    SELECT
    a.success_num success_num_last,
    a.order_amount order_amount_last,
    a.profits_amount profits_amount_last,
    b.*
     from (
    SELECT
    1 type,
    count(1) success_num,
    sum(their_price) order_amount,
    sum(profits) profits_amount
     from goods_order where `status` =7
    and  DATE_FORMAT(success_time, '%Y-%m') = DATE_FORMAT( DATE_SUB(CURDATE(), INTERVAL 1 MONTH), '%Y-%m')
    )a LEFT JOIN (
    -- 本月
    SELECT
    1 type,
    count(1) success_num,
    sum(their_price) order_amount,
    sum(profits) profits_amount
     from goods_order where `status` =7
    and  DATE_FORMAT(success_time, '%Y-%m') = DATE_FORMAT( DATE_SUB(CURDATE(), INTERVAL 0 MONTH), '%Y-%m')
    )b on a.type = b.type
  </select>

  <select id="indexOrderData" resultType="com.hf.op.infrastructure.dto.department.GoodsOrderCommonDto">
    SELECT
    date_table.months AS months,
    IFNULL( temp.num, 0 ) AS success_num,
    IFNULL( temp.their_price, 0 ) AS order_amount,
    IFNULL( temp.profits, 0 ) AS profits_amount
    FROM
    (
    with RECURSIVE months(months,num) as (
    SELECT DATE_FORMAT((CURDATE() - INTERVAL 0 MONTH), '%Y-%m') AS 'months' , 0 as num
    union all
    SELECT DATE_FORMAT((CURDATE() - INTERVAL num+1 MONTH), '%Y-%m') AS 'months', num+1 as num from months where 11 > num
    )
    select months from months
    ) date_table
    LEFT JOIN (
    SELECT DATE_FORMAT(success_time,'%Y-%m') date,sum(their_price) their_price, sum(profits) profits, count(1) num from goods_order
    where `status` = 7
    GROUP BY DATE_FORMAT(success_time,'%Y-%m')
    ORDER BY DATE_FORMAT(success_time,'%Y-%m')
    ) temp ON date_table.months = temp.date
    where months >= '2022-03'
    <if test="dto.createTimeFrom != null and dto.createTimeFrom != '' ">
      AND months >= #{dto.createTimeFrom}
    </if>
    <if test="dto.createTimeTo != null and dto.createTimeTo != '' ">
      AND #{dto.createTimeTo} >= months
    </if>
    <if test="dto.orderBy != null and dto.orderBy != '' ">
      ORDER BY  #{dto.orderBy}
    </if>
    <if test="dto.orderBy == null or dto.orderBy == '' ">
      ORDER BY months asc
    </if>
  </select>

  <select id="page" resultType="com.hf.op.infrastructure.vo.GoodsOrderPageVo">
    SELECT
    c.act_no,
    c.img_url,
    b.price,
    d.size,
    e.address,
    a.*
    FROM goods_order a
    LEFT JOIN goods_inventory b on a.inventory_id = b.id
    LEFT JOIN goods_base c on b.goods_id = c.id
    LEFT JOIN goods_size d on b.size_id = d.id
    LEFT JOIN goods_address e on a.address_id = e.id
    <where>
      a.data_status > -1
       <if test="dto.ids != null and dto.ids.size() > 0">
        AND a.id IN
        <foreach collection="dto.ids" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
       <if test="dto.statusArray != null and dto.statusArray.size() > 0">
        AND a.status IN
        <foreach collection="dto.statusArray" item="item" open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
      <if test="dto.id != null and dto.id != ''">
        AND a.id LIKE CONCAT( '%', #{dto.id},'%')
      </if>
      <if test="dto.keyword != null and dto.keyword != ''">
        AND (
            c.act_no LIKE CONCAT( '%', #{dto.keyword},'%')
          or
            d.size LIKE CONCAT( '%', #{dto.keyword},'%')
        )
      </if>
      <if test="dto.orderNo != null and dto.orderNo != ''">
        AND a.order_no LIKE CONCAT( '%', #{dto.orderNo},'%')
      </if>
      <if test="dto.inventoryId != null and dto.inventoryId != ''">
        AND a.inventory_id LIKE CONCAT( '%', #{dto.inventoryId},'%')
      </if>
      <if test="dto.status != null">
        AND a.`status` = #{dto.status}
      </if>
      <if test="dto.shelvesPriceFrom != null and dto.shelvesPriceFrom != '' ">
        AND a.shelves_price >= #{dto.shelvesPriceFrom}
      </if>
      <if test="dto.shelvesPriceTo != null and dto.shelvesPriceTo != '' ">
        AND #{dto.shelvesPriceTo} >= a.shelves_price
      </if>

      <if test="dto.freightFrom != null and dto.freightFrom != '' ">
        AND a.freight >= #{dto.freightFrom}
      </if>
      <if test="dto.freightTo != null and dto.freightTo != '' ">
        AND #{dto.freightTo} >= a.freight
      </if>

      <if test="dto.poundageFrom != null and dto.poundageFrom != '' ">
        AND a.poundage >= #{dto.poundageFrom}
      </if>
      <if test="dto.poundageTo != null and dto.poundageTo != '' ">
        AND #{dto.poundageTo} >= a.poundage
      </if>

      <if test="dto.theirPriceFrom != null and dto.theirPriceFrom != '' ">
        AND a.their_price >= #{dto.theirPriceFrom}
      </if>
      <if test="dto.theirPriceTo != null and dto.theirPriceTo != '' ">
        AND #{dto.theirPriceTo} >= a.their_price
      </if>

      <if test="dto.addressId != null and dto.addressId != ''">
        AND a.`address_id` = #{dto.addressId}
      </if>
      <if test="dto.waybillNo != null and dto.waybillNo != ''">
        AND a.waybill_no LIKE CONCAT( '%', #{dto.waybillNo},'%')
      </if>
      <if test="dto.createTimeFrom != null and dto.createTimeFrom != '' ">
        AND DATE_FORMAT(a.`create_time`,'%Y-%m-%d') >= #{dto.createTimeFrom}
      </if>
      <if test="dto.createTimeTo != null and dto.createTimeTo != '' ">
        AND #{dto.createTimeTo} >= DATE_FORMAT(a.`create_time`,'%Y-%m-%d')
      </if>
      <if test="dto.updateTimeFrom != null and dto.updateTimeFrom != '' ">
        AND DATE_FORMAT(a.`update_time`,'%Y-%m-%d') >= #{dto.updateTimeFrom}
      </if>
      <if test="dto.updateTimeTo != null and dto.updateTimeTo != '' ">
        AND #{dto.updateTimeTo} >= DATE_FORMAT(a.`update_time`,'%Y-%m-%d')
      </if>

      <if test="dto.sellTimeFrom != null and dto.sellTimeFrom != '' ">
        AND DATE_FORMAT(a.`sell_time`,'%Y-%m-%d') >= #{dto.sellTimeFrom}
      </if>
      <if test="dto.sellTimeTo != null and dto.sellTimeTo != '' ">
        AND #{dto.sellTimeTo} >= DATE_FORMAT(a.`sell_time`,'%Y-%m-%d')
      </if>
      <if test="dto.successTimeFrom != null and dto.successTimeFrom != '' ">
        AND DATE_FORMAT(a.`success_time`,'%Y-%m-%d') >= #{dto.successTimeFrom}
      </if>
      <if test="dto.successTimeTo != null and dto.successTimeTo != '' ">
        AND #{dto.successTimeTo} >= DATE_FORMAT(a.`success_time`,'%Y-%m-%d')
      </if>
    </where>
    ORDER BY  a.update_time DESC ,a.id desc
  </select>

</mapper>
